upstream uwsgi_backend {
      ip_hash;
      server  172.31.28.146:9900;
}

upstream nodejs_backend{
      ip_hash;
      server 172.31.28.146:3000;
}

upstream socket_backend{
      ip_hash;
      server 172.31.28.146:9800;
}

map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
}

server {
       server_name wowcare.ytlabs.co.kr;
       listen 80;
       listen 443 ssl;
       ssl_certificate /etc/nginx/certs/star.ytlabs.co.kr.pem;
       ssl_certificate_key /etc/nginx/certs/star.ytlabs.co.kr.key;
       access_log  /var/log/nginx/access_wowcare.log  main;
       error_log  /var/log/nginx/error_wowcare.log warn;


       location @master {
         include uwsgi_params;
         #uwsgi_pass unix:/tmp/docker/jc.sock;
         uwsgi_pass uwsgi_backend;
       }
       location / {
         try_files $uri @master;
       }
}

server {
      server_name wowagent.ytlabs.co.kr  wowapi.ytlabs.co.kr;
      listen 80;
      listen 443 ssl;
      listen 9800 ssl;
      large_client_header_buffers 8 32k;
      proxy_buffers 8 32k;
      proxy_buffer_size 64k;
      access_log  /var/log/nginx/access_node.log  main;
      error_log  /var/log/nginx/error_node.log warn;
      ssl_certificate /etc/nginx/certs/star.ytlabs.co.kr.pem;
      ssl_certificate_key /etc/nginx/certs/star.ytlabs.co.kr.key;
	  
      add_header Cache-Control no-cache;

      location / {
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Host $http_host;
         proxy_set_header X-NginX-Proxy true;
         proxy_pass http://nodejs_backend;
         proxy_redirect off;
      }
      location /socket.io/ {
         access_log  /var/log/nginx/access_socket.log  main;
         error_log  /var/log/nginx/error_socket.log warn;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Host $http_host;
         proxy_set_header X-NginX-Proxy true;
         proxy_pass http://socket_backend;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection $connection_upgrade;
      }
}
